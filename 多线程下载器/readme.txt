1、这是关于单线程、多线程下载器下载的程序
   主要思路是将要下载的文件分块获取及写入文件中，获取文件总长度后按线程数量确定每块的起始和结束位置
   每个线程下载一个文件块

2、使用到的主要知识点
    2.1 使用requests模块发送请求
        a、使用head请求获得响应头，其中Content-Length是要下载文件的长度
        b、使用get请求获取文件内容
    2.2 使用open 、write创建新文件，将获取的内容写入文件中
        a、写前使用seek()定位开始写入位置
    2.3 使用Threading线程模块
        a、因为下载文件包含阻塞IO操作，如url请求和write写操作，使用多线程可提高下载文件的速度
        b、每个线程下载一块文件，文件大小为 总长度/线程数量
    2.4 使用os、sys
        为实现 "./loader.py url 线程数"方式运行程序，sys可以获取命令行参数
        源码中要添加shebang指定解释器：#!/usr/bin/python3
        os的作用?

3、程序设计思路
    3.1 首先实现能一次下载文件的代码，跑通
    3.2 然后实现单线程多次分块下载的功能
    3.3.实现多线程下载的功能：每个线程执行一块文件的下载

4、程序的结构
   下载器有4部分组成
   1、__init__初始化部分：设置保存下载数据的文件名、url、线程数、文件总长
   2、get_block: 将文件按线程数量均分，计算得到每块的起始位置和结束地址,最后一块到文件末尾位置，用''表示
   3、down_block:发送get请求，指定访问文件块的起始地址和结束地址，使用起始地址定位开始写入数据的位置
   4、run(): 创建文件对象，创建及启动线程(down_block)，判断所有线程是否执行完成

5、持续可以优化的点
    1、一个文件描述符多个进程用会出问题
        建议用os.dup复制文件描述符和os.fdopen来打开处理文件
    2、要下载的资源地址和线程数,应该做成命令行传进来的
        用sys.argv获取命令行参数
        支持python downloader.py url num这种写法
    3、参数数量不对或者格式不对时报错
    4、各种容错处理
